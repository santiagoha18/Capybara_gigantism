#Extract GO annotations for ALL genes
all_ids <- dnds_filt$V2
library(ggplot2)
library(biomaRt)
dnds2 <- read.csv("pairwise_dnds_Gpig-Capybara-Rat_filteredAlignments.out",sep="\t",header=F)
#Exclude orthologs with ratio = NA: alignments with a trimmed length below 50% of the original alignment length.
dnds_filt2 <- dnds2[!(dnds2$V4 == 'NA  '),]
#Extract pairwise dN/dS values for Guinea pig-Rat comparisons
omegaGPR <- dnds_filt2$V5
omegaGPR <- as.numeric(levels(omegaGPR))[omegaGPR]
#Extract pairwise dN/dS values for Capybara-Guinea pig comparisons
omegaCGP <- dnds_filt2$V4
omegaCGP <- as.numeric(levels(omegaCGP))[omegaCGP]
#Compute ratios
ratio <- omegaCGP/max(omegaGPR)
dnds_filt2$ratio <- ratio
#Extract genes on the top 5% of the distribution of ratios
mask <- ratio > quantile(ratio,0.95)
top5 <- dnds_filt2[mask,]
ggplot(data=dnds_filt2, aes(dnds_filt2$ratio)) + geom_histogram()+ labs(x="Capybara-GuineaPig dN/dS vs higher GuineaPig-Rat dN/dS", y="frecuency") + geom_vline(aes(xintercept=quantile(ratio,0.95),colour="red"),linetype="dashed")+theme(panel.background = element_rect(fill = "white", colour = "black"), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(face="bold", size=13),axis.text.y = element_text(face="bold", size=13), axis.title.y = element_text(face="bold", size=15),axis.title.x = element_text(face="bold", size=13))
dnds2 <- read.csv("/../Capybara-GuineaPig-Rat/pairwise_dnds_Gpig-Capybara-Rat_filteredAlignments.out",sep="\t",header=F)
#Exclude orthologs with ratio = NA: alignments with a trimmed length below 50% of the original alignment length.
dnds_filt2 <- dnds2[!(dnds2$V4 == 'NA  '),]
#Extract pairwise dN/dS values for Guinea pig-Rat comparisons
omegaGPR <- dnds_filt2$V5
omegaGPR <- as.numeric(levels(omegaGPR))[omegaGPR]
#Extract pairwise dN/dS values for Capybara-Guinea pig comparisons
omegaCGP <- dnds_filt2$V4
omegaCGP <- as.numeric(levels(omegaCGP))[omegaCGP]
#Compute ratios
ratio <- omegaCGP/max(omegaGPR)
dnds_filt2$ratio <- ratio
#Extract genes on the top 5% of the distribution of ratios
mask <- ratio > quantile(ratio,0.95)
top5 <- dnds_filt2[mask,]
ggplot(data=dnds_filt2, aes(dnds_filt2$ratio)) + geom_histogram()+ labs(x="Capybara-GuineaPig dN/dS vs higher GuineaPig-Rat dN/dS", y="frecuency") + geom_vline(aes(xintercept=quantile(ratio,0.95),colour="red"),linetype="dashed")+theme(panel.background = element_rect(fill = "white", colour = "black"), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(face="bold", size=13),axis.text.y = element_text(face="bold", size=13), axis.title.y = element_text(face="bold", size=15),axis.title.x = element_text(face="bold", size=13))
dnds2 <- read.csv("/../Capybara-GuineaPig-Rat/pairwise_dnds_Gpig-Capybara-Rat_filteredAlignments.out",sep="\t",header=F)
dnds2 <- read.csv("../Capybara-GuineaPig-Rat/pairwise_dnds_Gpig-Capybara-Rat_filteredAlignments.out",sep="\t",header=F)
getwd()
setwd("/Users/SantiagoHerrera/GitKraken/Capybara_gigantism_original/Pairwise_dnds/code")
unlink('pairwise_dnds_cache', recursive = TRUE)
dnds2 <- read.csv("../Capybara-GuineaPig-Rat/pairwise_dnds_Gpig-Capybara-Rat_filteredAlignments.out",sep="\t",header=F)
#Exclude orthologs with ratio = NA: alignments with a trimmed length below 50% of the original alignment length.
dnds_filt2 <- dnds2[!(dnds2$V4 == 'NA  '),]
#Extract pairwise dN/dS values for Guinea pig-Rat comparisons
omegaGPR <- dnds_filt2$V5
omegaGPR <- as.numeric(levels(omegaGPR))[omegaGPR]
#Extract pairwise dN/dS values for Capybara-Guinea pig comparisons
omegaCGP <- dnds_filt2$V4
omegaCGP <- as.numeric(levels(omegaCGP))[omegaCGP]
#Compute ratios
ratio <- omegaCGP/max(omegaGPR)
dnds_filt2$ratio <- ratio
#Extract genes on the top 5% of the distribution of ratios
mask <- ratio > quantile(ratio,0.95)
top5 <- dnds_filt2[mask,]
ggplot(data=dnds_filt2, aes(dnds_filt2$ratio)) + geom_histogram()+ labs(x="Capybara-GuineaPig dN/dS vs higher GuineaPig-Rat dN/dS", y="frecuency") + geom_vline(aes(xintercept=quantile(ratio,0.95),colour="red"),linetype="dashed")+theme(panel.background = element_rect(fill = "white", colour = "black"), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(face="bold", size=13),axis.text.y = element_text(face="bold", size=13), axis.title.y = element_text(face="bold", size=15),axis.title.x = element_text(face="bold", size=13))
mask
length(mask == TRUE)
head(top5)
dnds <- read.csv("../Capybara-GuineaPig/pairwise_dnds_Gpig-Capybara_filteredAlignments.out",sep="\t",header=F)
#Exclude orthologs with ratio = NA: alignments with a trimmed length below 50% of the original alignment length.
dnds_filt <- dnds[!(dnds$V3 == 'NA  '),]
omega <- dnds_filt$V3
omega <- as.numeric(levels(omega))[omega]
mask <- omega > 1
above1 <- dnds_filt[mask,]
above1
dim(above1)
genesAbove1
gPigIDs <- above1$V2
genesAbove1 <- getBM(attributes=c("ensembl_peptide_id","external_gene_name"),filters="ensembl_peptide_id",values=as.character(gPigIDs),mart=ensembl_cavia)
ensembl=useMart("ensembl")
ensembl_cavia=useMart("ensembl",dataset="cporcellus_gene_ensembl")
gPigIDs <- above1$V2
genesAbove1 <- getBM(attributes=c("ensembl_peptide_id","external_gene_name"),filters="ensembl_peptide_id",values=as.character(gPigIDs),mart=ensembl_cavia)
print(genesAbove1)
genesAbove1
length(gPigIDs)
dnds <- read.csv("../Capybara-GuineaPig/pairwise_dnds_Gpig-Capybara_filteredAlignments.out",sep="\t",header=F)
dim(dnds)
#Exclude orthologs with ratio = NA: alignments with a trimmed length below 50% of the original alignment length.
dnds_filt <- dnds[!(dnds$V3 == 'NA  '),]
dim(dnds_filt)
head(dnds_filt)
omega <- dnds_filt$V3
omega <- as.numeric(levels(omega))[omega]
mask <- omega > 1
above1 <- dnds_filt[mask,]
above1
dnds2 <- read.csv("../Capybara-GuineaPig-Rat/pairwise_dnds_Gpig-Capybara-Rat_filteredAlignments.out",sep="\t",header=F)
#Exclude orthologs with ratio = NA: alignments with a trimmed length below 50% of the original alignment length.
dnds_filt2 <- dnds2[!(dnds2$V4 == 'NA  '),]
#Extract pairwise dN/dS values for Guinea pig-Rat comparisons
omegaGPR <- dnds_filt2$V5
omegaGPR <- as.numeric(levels(omegaGPR))[omegaGPR]
#Extract pairwise dN/dS values for Capybara-Guinea pig comparisons
omegaCGP <- dnds_filt2$V4
omegaCGP <- as.numeric(levels(omegaCGP))[omegaCGP]
#Compute ratios
ratio <- omegaCGP/max(omegaGPR)
dnds_filt2$ratio <- ratio
#Extract genes on the top 5% of the distribution of ratios
mask <- ratio > quantile(ratio,0.95)
top5 <- dnds_filt2[mask,]
#Plot the distribution of ratios, showing the cutoff (red line) of 95%
ggplot(data=dnds_filt2, aes(dnds_filt2$ratio)) + geom_histogram()+ labs(x="Capybara-GuineaPig dN/dS vs higher GuineaPig-Rat dN/dS", y="frecuency") + geom_vline(aes(xintercept=quantile(ratio,0.95),colour="red"),linetype="dashed")+theme(panel.background = element_rect(fill = "white", colour = "black"), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(face="bold", size=13),axis.text.y = element_text(face="bold", size=13), axis.title.y = element_text(face="bold", size=15),axis.title.x = element_text(face="bold", size=13))
dim(top5)
head(top5)
#Extract GO annotations for ALL genes using Guinea Pig Ensembl protein id's
all_ids_GPig <- dnds_filt2$V2
genesAll_GPig <- getBM(attributes=c("ensembl_peptide_id","external_gene_name","go_id","goslim_goa_description"),filters="ensembl_peptide_id",values=as.character(all_ids_GPig),mart=ensembl_cavia)
#Extract GO annotations for genes on top 5%
top5_ids_GPig <- top5$V2
genesTop5 <- getBM(attributes=c("ensembl_peptide_id","external_gene_name","go_id","goslim_goa_description"),filters="ensembl_peptide_id",values=as.character(top5_ids_GPig),mart=ensembl_cavia)
all_GOs_GPig <- genesAll_GPig$goslim_goa_description
out_GOs_GPig <- genesTop5$goslim_goa_description
unique_out_GOs <- unique(genesTop5$goslim_goa_description)
fisherPvalues_out <- c()
GO_term <- c()
for(i in 1:length(unique_out_GOs)){
a <- sapply(unique_out_GOs[i],function(x) sum(x==out_GOs))
b <- sapply(unique_out_GOs[i],function(x) sum(x==all_GOs))
c <- length(out_GOs_GPig)-a
d <- length(all_GOs_GPig)-b
f <- fisher.test(matrix(c(a,b,c,d),nrow=2,ncol=2,byrow=TRUE),alternative="greater")
GO_term <- c(GO_term,as.character(unique_out_GOs[i]))
fisherPvalues_out <- c(fisherPvalues_out,f$p.value)
}
unique_out_GOs
for(i in 1:length(unique_out_GOs)){
a <- sapply(unique_out_GOs[i],function(x) sum(x==out_GOs_GPig))
b <- sapply(unique_out_GOs[i],function(x) sum(x==all_GOs_GPig))
c <- length(out_GOs_GPig)-a
d <- length(all_GOs_GPig)-b
f <- fisher.test(matrix(c(a,b,c,d),nrow=2,ncol=2,byrow=TRUE),alternative="greater")
GO_term <- c(GO_term,as.character(unique_out_GOs[i]))
fisherPvalues_out <- c(fisherPvalues_out,f$p.value)
}
fisherPvalues_out_Bonferroni <- p.adjust(fisherPvalues_out,method="bonferroni",n=length(fisherPvalues_out))
out_fisherResults <- data.frame(GO_term,fisherPvalues_out,fisherPvalues_out_Bonferroni)
significativas_out2 <- out_fisherResults[out_fisherResults$fisherPvalues_out_Bonferroni<0.05,]
head(significativas_out2)
significativas_out2
dnds2 <- read.csv("../Capybara-GuineaPig-Rat/pairwise_dnds_Gpig-Capybara-Rat_filteredAlignments.out",sep="\t",header=F)
#Exclude orthologs with ratio = NA: alignments with a trimmed length below 50% of the original alignment length.
dnds_filt2 <- dnds2[!(dnds2$V4 == 'NA  '),]
#Extract pairwise dN/dS values for Guinea pig-Rat comparisons
omegaGPR <- dnds_filt2$V5
omegaGPR <- as.numeric(levels(omegaGPR))[omegaGPR]
#Extract pairwise dN/dS values for Capybara-Guinea pig comparisons
omegaCGP <- dnds_filt2$V4
omegaCGP <- as.numeric(levels(omegaCGP))[omegaCGP]
#Compute ratios
ratio <- omegaCGP/omegaGPR
dnds_filt2$ratio <- ratio
#Extract genes on the top 5% of the distribution of ratios
mask <- ratio > quantile(ratio,0.95)
length(ratio)
head(dnds_filt2)
#Extract genes on the top 5% of the distribution of ratios
mask <- ratio > quantile(ratio,0.95)
dnds_filt2 <- dnds_filt[!(dnds_filt$V4 == 'NA  '),]
omegaGPR <- dnds_filt2$V5
omegaGPR <- as.numeric(levels(omegaGPR))[omegaGPR]
omegaCGP <- dnds_filt2$V4
omegaCGP <- as.numeric(levels(omegaCGP))[omegaCGP]
ratio2 <- c()
for(i in 1:length(omegaCGP)){
temp <- omegaCGP[i]/omegaGPR[i]
if(temp == "NaN"){
temp <- 0
}
ratio2 <- c(ratio2,temp)
}
dnds_filt2$ratio2 <- ratio2
dnds_filt2
ratio2 <- c()
for(i in 1:length(omegaCGP)){
temp <- omegaCGP[i]/omegaGPR[i]
if(temp == "NaN"){
temp <- 0
}
ratio2 <- c(ratio2,temp)
}
ratio2 <- c()
for(i in 1:length(omegaCGP)){
temp <- omegaCGP[i]/omegaGPR[i]
if(temp == "NaN") == TRUE {
temp <- 0
}
ratio2 <- c(ratio2,temp)
}
dnds_filt2$ratio2 <- ratio2
ratio2 <- c()
for(i in 1:length(omegaCGP)){
temp <- omegaCGP[i]/omegaGPR[i]
if(temp == "NaN") temp <- 0
ratio2 <- c(ratio2,temp)
}
dnds_filt2$ratio2 <- ratio2
significativas_out2
View(significativas_out2)
temp <- omegaCGP[1]/omegaGPR[1]
temp
omegaCGP[1]
dnds_filt2 <- dnds_filt[!(dnds_filt$V4 == 'NA  '),]
omegaGPR <- dnds_filt2$V5
omegaGPR <- as.numeric(levels(omegaGPR))[omegaGPR]
omegaCGP <- dnds_filt2$V4
omegaCGP <- as.numeric(levels(omegaCGP))[omegaCGP]
dnds_filt2 <- dnds_filt[!(dnds_filt$V4 == 'NA  '),]
dnds_filt2 <- dnds_filt[!(dnds_filt$V5 == 'NA  '),]
omegaGPR <- dnds_filt2$V5
omegaGPR <- as.numeric(levels(omegaGPR))[omegaGPR]
omegaCGP <- dnds_filt2$V4
omegaCGP <- as.numeric(levels(omegaCGP))[omegaCGP]
ratio2 <- omegaCGP/omegaGPR
dnds_filt2$ratio2 <- ratio2
head(dnds_filt2)
dnds_filt2 <- dnds2[!(dnds_filt$V4 == 'NA  '),]
dnds_filt2 <- dnds2[!(dnds_filt$V5 == 'NA  '),]
#Extract pairwise dN/dS values for Guinea pig-Rat comparisons
omegaGPR <- dnds_filt2$V5
omegaGPR <- as.numeric(levels(omegaGPR))[omegaGPR]
#Extract pairwise dN/dS values for Capybara-Guinea pig comparisons
omegaCGP <- dnds_filt2$V4
omegaCGP <- as.numeric(levels(omegaCGP))[omegaCGP]
max(omegaGPR)
dim(dnds_filt2)
dnds2 <- read.csv("../Capybara-GuineaPig-Rat/pairwise_dnds_Gpig-Capybara-Rat_filteredAlignments.out",sep="\t",header=F)
#Exclude orthologs with ratio = NA: alignments with a trimmed length below 50% of the original alignment length.
dnds_filt2 <- dnds2[!(dnds_filt$V4 == 'NA  '),]
dnds_filt2 <- dnds2[!(dnds_filt$V5 == 'NA  '),]
dim(dnds_filt2)
dnds2 <- read.csv("../Capybara-GuineaPig-Rat/pairwise_dnds_Gpig-Capybara-Rat_filteredAlignments.out",sep="\t",header=F)
names(dnds2)
head(dnds2)
dnds_filt2 <- dnds2[!(dnds_filt$V4 == 'NA  '),]
#Extract pairwise dN/dS values for Guinea pig-Rat comparisons
omegaGPR <- dnds_filt2$V5
omegaGPR <- as.numeric(levels(omegaGPR))[omegaGPR]
#Extract pairwise dN/dS values for Capybara-Guinea pig comparisons
omegaCGP <- dnds_filt2$V4
omegaCGP <- as.numeric(levels(omegaCGP))[omegaCGP]
max(omegaGPR)
omegaGPR
dnds2 <- read.csv("../Capybara-GuineaPig-Rat/pairwise_dnds_Gpig-Capybara-Rat_filteredAlignments.out",sep="\t",header=F)
#Exclude orthologs with ratio = NA: alignments with a trimmed length below 50% of the original alignment length.
dnds_filt2 <- dnds2[!(dnds_filt$V4 == 'NA  '),]
#Extract pairwise dN/dS values for Guinea pig-Rat comparisons
omegaGPR <- dnds_filt2$V5
omegaGPR <- as.numeric(levels(omegaGPR))[omegaGPR]
#Extract pairwise dN/dS values for Capybara-Guinea pig comparisons
omegaCGP <- dnds_filt2$V4
omegaCGP <- as.numeric(levels(omegaCGP))[omegaCGP]
dnds2 <- read.csv("../Capybara-GuineaPig-Rat/pairwise_dnds_Gpig-Capybara-Rat_filteredAlignments.out",sep="\t",header=F)
#Exclude orthologs with ratio = NA: alignments with a trimmed length below 50% of the original alignment length.
dnds_filt2 <- dnds2[!(dnds2$V4 == 'NA  '),]
#Extract pairwise dN/dS values for Guinea pig-Rat comparisons
omegaGPR <- dnds_filt2$V5
omegaGPR <- as.numeric(levels(omegaGPR))[omegaGPR]
#Extract pairwise dN/dS values for Capybara-Guinea pig comparisons
omegaCGP <- dnds_filt2$V4
omegaCGP <- as.numeric(levels(omegaCGP))[omegaCGP]
omegaGPR
max(omegaGPR)
ratio2 <- omegaCGP/omegaGPR
dnds_filt2$ratio2 <- ratio2
head(dnds_filt2)
mask <- ratio2 > quantile(ratio,0.95)
top5 <- dnds_filt2[mask,]
dnds_filt2 <- dnds2[!(dnds2$V4 == 'NA  '),]
#Extract pairwise dN/dS values for Guinea pig-Rat comparisons
omegaGPR <- dnds_filt2$V5
omegaGPR <- as.numeric(levels(omegaGPR))[omegaGPR]
#Extract pairwise dN/dS values for Capybara-Guinea pig comparisons
omegaCGP <- dnds_filt2$V4
omegaCGP <- as.numeric(levels(omegaCGP))[omegaCGP]
ratio2 <- c()
for(i in 1:length(omegaCGP)){
temp <- omegaCGP[i]/omegaGPR[i]
if(temp == "NaN"){
temp <- 0
}
ratio2 <- c(ratio2,temp)
}
dnds_filt2$ratio2 <- ratio2
mask <- ratio2 > quantile(ratio,0.95)
ratio2
which(is.na(ratio2))
mask <- ratio2 > quantile(ratio2,0.95)
top5b <- dnds_filt2[mask,]
all_ids_GPig <- dnds_filt2$V2
genesAll_GPig <- getBM(attributes=c("ensembl_peptide_id","external_gene_name","go_id","goslim_goa_description"),filters="ensembl_peptide_id",values=as.character(all_ids_GPig),mart=ensembl_cavia)
#Extract GO annotations for genes on top 5%
top5_ids_GPig <- top5b$V2
genesTop5 <- getBM(attributes=c("ensembl_peptide_id","external_gene_name","go_id","goslim_goa_description"),filters="ensembl_peptide_id",values=as.character(top5_ids_GPig),mart=ensembl_cavia)
all_GOs_GPig <- genesAll_GPig$goslim_goa_description
out_GOs_GPig <- genesTop5$goslim_goa_description
unique_out_GOs <- unique(genesTop5$goslim_goa_description)
fisherPvalues_out <- c()
GO_term <- c()
for(i in 1:length(unique_out_GOs)){
a <- sapply(unique_out_GOs[i],function(x) sum(x==out_GOs_GPig))
b <- sapply(unique_out_GOs[i],function(x) sum(x==all_GOs_GPig))
c <- length(out_GOs_GPig)-a
d <- length(all_GOs_GPig)-b
f <- fisher.test(matrix(c(a,b,c,d),nrow=2,ncol=2,byrow=TRUE),alternative="greater")
GO_term <- c(GO_term,as.character(unique_out_GOs[i]))
fisherPvalues_out <- c(fisherPvalues_out,f$p.value)
}
fisherPvalues_out_Bonferroni <- p.adjust(fisherPvalues_out,method="bonferroni",n=length(fisherPvalues_out))
out_fisherResults <- data.frame(GO_term,fisherPvalues_out,fisherPvalues_out_Bonferroni)
significativas_out2 <- out_fisherResults[out_fisherResults$fisherPvalues_out_Bonferroni<0.05,]
significativas_out2
#Plot the distribution of ratios, showing the cutoff (red line) of 95%
ggplot(data=dnds_filt2, aes(dnds_filt2$ratio)) + geom_histogram()+ labs(x="Capybara-GuineaPig dN/dS vs higher GuineaPig-Rat dN/dS", y="frecuency") + geom_vline(aes(xintercept=quantile(ratio,0.95),colour="red"),linetype="dashed")+theme(panel.background = element_rect(fill = "white", colour = "black"), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(face="bold", size=13),axis.text.y = element_text(face="bold", size=13), axis.title.y = element_text(face="bold", size=15),axis.title.x = element_text(face="bold", size=13))
dnds2 <- read.csv("../Capybara-GuineaPig-Rat/pairwise_dnds_Gpig-Capybara-Rat_filteredAlignments.out",sep="\t",header=F)
#Exclude orthologs with ratio = NA: alignments with a trimmed length below 50% of the original alignment length.
dnds_filt2 <- dnds2[!(dnds2$V4 == 'NA  '),]
#Extract pairwise dN/dS values for Guinea pig-Rat comparisons
omegaGPR <- dnds_filt2$V5
omegaGPR <- as.numeric(levels(omegaGPR))[omegaGPR]
#Extract pairwise dN/dS values for Capybara-Guinea pig comparisons
omegaCGP <- dnds_filt2$V4
omegaCGP <- as.numeric(levels(omegaCGP))[omegaCGP]
#Compute ratios
ratio <- c()
for(i in 1:length(omegaCGP)){
temp <- omegaCGP[i]/omegaGPR[i]
if(temp == "NaN"){
temp <- 0
}
ratio <- c(ratio,temp)
}
dnds_filt2$ratio <- ratio
#Extract genes on the top 5% of the distribution of ratios
mask <- ratio > quantile(ratio,0.95)
top5 <- dnds_filt2[mask,]
#Plot the distribution of ratios, showing the cutoff (red line) of 95%
ggplot(data=dnds_filt2, aes(dnds_filt2$ratio)) + geom_histogram()+ labs(x="Capybara-GuineaPig dN/dS vs higher GuineaPig-Rat dN/dS", y="frecuency") + geom_vline(aes(xintercept=quantile(ratio,0.95),colour="red"),linetype="dashed")+theme(panel.background = element_rect(fill = "white", colour = "black"), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(face="bold", size=13),axis.text.y = element_text(face="bold", size=13), axis.title.y = element_text(face="bold", size=15),axis.title.x = element_text(face="bold", size=13))
dim(top5)
dnds_filt2
top5
dim(top5)
write.csv(top5, "top5_pairwise_dnds_3spp_corrected.csv",sep="\t")
write(genesAll_GPig,"allgenes.csv")
write.csv(genesAll_GPig,"allgenes.csv")
genes<- getBM(attributes=c("ensembl_peptide_id","external_gene_name"),filters="ensembl_peptide_id",values=as.character(all_ids_GPig),mart=ensembl_cavia)
write.csv(genes,"allgenes.csv")
dnds2 <- read.csv("../Capybara-GuineaPig-Rat/pairwise_dnds_Gpig-Capybara-Rat_filteredAlignments.out",sep="\t",header=F)
#Exclude orthologs with ratio = NA: alignments with a trimmed length below 50% of the original alignment length.
dnds_filt2 <- dnds2[!(dnds2$V4 == 'NA  '),]
#Extract pairwise dN/dS values for Guinea pig-Rat comparisons
omegaGPR <- dnds_filt2$V5
omegaGPR <- as.numeric(levels(omegaGPR))[omegaGPR]
#Extract pairwise dN/dS values for Capybara-Guinea pig comparisons
omegaCGP <- dnds_filt2$V4
omegaCGP <- as.numeric(levels(omegaCGP))[omegaCGP]
#Compute ratios
ratio <- omegaCGP/max(omegaGPR)
##ratio <- c()
#for(i in 1:length(omegaCGP)){
#  temp <- omegaCGP[i]/omegaGPR[i]
#  if(temp == "NaN"){
#    temp <- 0
#  }
#  ratio <- c(ratio,temp)
#}
dnds_filt2$ratio <- ratio
head(dnds_filt2)
#Extract genes on the top 5% of the distribution of ratios
mask <- ratio > quantile(ratio,0.95)
top5 <- dnds_filt2[mask,]
dim(top5)
library(ggplot2)
library(biomaRt)
#Plot the distribution of ratios, showing the cutoff (red line) of 95%
ggplot(data=dnds_filt2, aes(dnds_filt2$ratio)) + geom_histogram()+ labs(x="Capybara-GuineaPig dN/dS vs GuineaPig-Rat dN/dS", y="frecuency") + geom_vline(aes(xintercept=quantile(ratio,0.95),colour="red"),linetype="dashed")+theme(panel.background = element_rect(fill = "white", colour = "black"), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x = element_text(face="bold", size=13),axis.text.y = element_text(face="bold", size=13), axis.title.y = element_text(face="bold", size=15),axis.title.x = element_text(face="bold", size=13))
all_ids_GPig <- dnds_filt2$V2
genesAll_GPig <- getBM(attributes=c("ensembl_peptide_id","external_gene_name","go_id","goslim_goa_description"),filters="ensembl_peptide_id",values=as.character(all_ids_GPig),mart=ensembl_cavia)
ensembl=useMart("ensembl")
ensembl_cavia=useMart("ensembl",dataset="cporcellus_gene_ensembl")
all_ids_GPig <- dnds_filt2$V2
genesAll_GPig <- getBM(attributes=c("ensembl_peptide_id","external_gene_name","go_id","goslim_goa_description"),filters="ensembl_peptide_id",values=as.character(all_ids_GPig),mart=ensembl_cavia)
#Extract GO annotations for genes on top 5%
top5_ids_GPig <- top5$V2
genesTop5 <- getBM(attributes=c("ensembl_peptide_id","external_gene_name","go_id","goslim_goa_description"),filters="ensembl_peptide_id",values=as.character(top5_ids_GPig),mart=ensembl_cavia)
all_GOs_GPig <- genesAll_GPig$goslim_goa_description
out_GOs_GPig <- genesTop5$goslim_goa_description
unique_out_GOs <- unique(genesTop5$goslim_goa_description)
fisherPvalues_out <- c()
GO_term <- c()
for(i in 1:length(unique_out_GOs)){
a <- sapply(unique_out_GOs[i],function(x) sum(x==out_GOs_GPig))
b <- sapply(unique_out_GOs[i],function(x) sum(x==all_GOs_GPig))
c <- length(out_GOs_GPig)-a
d <- length(all_GOs_GPig)-b
f <- fisher.test(matrix(c(a,b,c,d),nrow=2,ncol=2,byrow=TRUE),alternative="greater")
GO_term <- c(GO_term,as.character(unique_out_GOs[i]))
fisherPvalues_out <- c(fisherPvalues_out,f$p.value)
}
fisherPvalues_out_Bonferroni <- p.adjust(fisherPvalues_out,method="bonferroni",n=length(fisherPvalues_out))
out_fisherResults <- data.frame(GO_term,fisherPvalues_out,fisherPvalues_out_Bonferroni)
significativas_out2 <- out_fisherResults[out_fisherResults$fisherPvalues_out_Bonferroni<0.05,]
View(significativas_out2)
write.csv(significativas_out2,"go_enrichment_test.csv")
dnds <- read.csv("../Capybara-GuineaPig/pairwise_dnds_Gpig-Capybara_filteredAlignments.out",sep="\t",header=F)
#Exclude orthologs with ratio = NA: alignments with a trimmed length below 50% of the original alignment length.
dnds_filt <- dnds[!(dnds$V3 == 'NA  '),]
#Extract orhologs with dN/dS value > 1
omega <- dnds_filt$V3
omega <- as.numeric(levels(omega))[omega]
mask <- omega > 1
above1 <- dnds_filt[mask,]
#Choose the guinea pig ensembl database
ensembl=useMart("ensembl")
ensembl_cavia=useMart("ensembl",dataset="cporcellus_gene_ensembl")
gPigIDs <- above1$V2
genesAbove1 <- getBM(attributes=c("ensembl_peptide_id","external_gene_name"),filters="ensembl_peptide_id",values=as.character(gPigIDs),mart=ensembl_cavia)
View(genesAbove1)
genesAbove1
above1
read.csv("../Capybara-GuineaPig/dnds_above_1_pairwise_GuineaPig_Capybara.csv")
library(ggplot2)
library(biomaRt)
dnds2 <- read.csv("../Capybara-GuineaPig-Rat/pairwise_dnds_Gpig-Capybara-Rat_filteredAlignments.out",sep="\t",header=F)
#Exclude orthologs with ratio = NA: alignments with a trimmed length below 50% of the original alignment length.
dnds_filt2 <- dnds2[!(dnds2$V4 == 'NA  '),]
#Extract pairwise dN/dS values for Guinea pig-Rat comparisons
omegaGPR <- dnds_filt2$V5
omegaGPR <- as.numeric(levels(omegaGPR))[omegaGPR]
#Extract pairwise dN/dS values for Capybara-Guinea pig comparisons
omegaCGP <- dnds_filt2$V4
omegaCGP <- as.numeric(levels(omegaCGP))[omegaCGP]
#Compute ratios
ratio <- omegaCGP/max(omegaGPR)
##ratio <- c()
#for(i in 1:length(omegaCGP)){
#  temp <- omegaCGP[i]/omegaGPR[i]
#  if(temp == "NaN"){
#    temp <- 0
#  }
#  ratio <- c(ratio,temp)
#}
dnds_filt2$ratio <- ratio
mask <- ratio > quantile(ratio,0.95)
top5 <- dnds_filt2[mask,]
top5
top5_ids_GPig <- top5$V2
genesTop5 <- getBM(attributes=c("ensembl_peptide_id","external_gene_name","go_id","goslim_goa_description"),filters="ensembl_peptide_id",values=as.character(top5_ids_GPig),mart=ensembl_cavia)
#Choose Guinea pig Ensembl database
ensembl=useMart("ensembl")
ensembl_cavia=useMart("ensembl",dataset="cporcellus_gene_ensembl")
genesTop5 <- getBM(attributes=c("ensembl_peptide_id","external_gene_name","go_id","goslim_goa_description"),filters="ensembl_peptide_id",values=as.character(top5_ids_GPig),mart=ensembl_cavia)
genesTop5
unique(genesTop5$external_gene_name)
library(ggplot2)
library(biomaRt)
#Choose Guinea pig Ensembl database
ensembl=useMart("ensembl")
ensembl_cavia=useMart("ensembl",dataset="cporcellus_gene_ensembl")
dnds2 <- read.csv("../Capybara-GuineaPig-Rat/pairwise_dnds_Gpig-Capybara-Rat_filteredAlignments.out",sep="\t",header=F)
dnds_filt2 <- dnds2[!(dnds2$V4 == 'NA  '),]
#Extract pairwise dN/dS values for Guinea pig-Rat comparisons
omegaGPR <- dnds_filt2$V5
omegaGPR <- as.numeric(levels(omegaGPR))[omegaGPR]
#Extract pairwise dN/dS values for Capybara-Guinea pig comparisons
omegaCGP <- dnds_filt2$V4
omegaCGP <- as.numeric(levels(omegaCGP))[omegaCGP]
#Compute ratios
ratio <- omegaCGP/max(omegaGPR)
##ratio <- c()
#for(i in 1:length(omegaCGP)){
#  temp <- omegaCGP[i]/omegaGPR[i]
#  if(temp == "NaN"){
#    temp <- 0
#  }
#  ratio <- c(ratio,temp)
#}
dnds_filt2$ratio <- ratio
#Extract genes on the top 5% of the distribution of ratios
mask <- ratio > quantile(ratio,0.95)
top5 <- dnds_filt2[mask,]
#Extract GO annotations for genes on top 5%
top5_ids_GPig <- top5$V2
genesTop5 <- getBM(attributes=c("ensembl_peptide_id","external_gene_name","go_id","goslim_goa_description"),filters="ensembl_peptide_id",values=as.character(top5_ids_GPig),mart=ensembl_cavia)
unique(genesTop5$external_gene_name)
library(dplyr)
t <- read.csv("../LRs-dists.csv",h=TRUE)
raw.t <- read.csv("../ProtDNA_dists_results_OrthoVennHystricognathi.out",h=FALSE,sep="\t")
colnames(raw.t) <- c("Gen","CD","GPD","D_stat_DNA","CDp","GPDp","D_stat_prot")
#Standardization of PDI statistic: PDI/GPD.
#Rationale: A PDI of 0.1 can be caused by 0.2-0.1 or 0.9-0.8 (CD-GPD, respectively). In the first case the CD value is 2x the GPD value.
D_stat_prot_Stand <- c()
for(i in 1:length(raw.t$D_stat_prot)){
q <- NULL
if(raw.t$GPDp[i] == 0) q <- raw.t$D_stat_prot[i]*10
else q <- raw.t$D_stat_prot[i]/raw.t$GPDp[i]
D_stat_prot_Stand <- c(D_stat_prot_Stand,q)
}
raw.t$D_stat_prot_Stand <- D_stat_prot_Stand
#Combine the two datasets
tcombined <- inner_join(raw.t,t,by="Gen")
t2 <- tcombined[complete.cases(tcombined), ]
t2 <- t2[!(t2$LR<0),]
#Extract the genes on the top 5% of the distribution of both axes
labels=t2[t2$LR>=quantile(t2$LR,0.95) & t2$D_stat_prot_Stand>=quantile(t2$D_stat_prot_Stand,0.95),]
head(labels)
labels$gene_name
read.csv("../Capybara-GuineaPig/dnds_above_1_pairwise_GuineaPig_Capybara.csv")
